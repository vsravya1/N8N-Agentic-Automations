{
  "name": "Know about the stock Bot – Lovable → n8n → Finnhub → OpenAI",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "a496a526-f12f-48a6-a6ba-163e00a0424b",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        0,
        60
      ],
      "id": "811454b3-fd54-4643-81d7-c70073fcdb2f",
      "name": "Webhook",
      "webhookId": "a496a526-f12f-48a6-a6ba-163e00a0424b"
    },
    {
      "parameters": {
        "jsCode": "const stockSymbol = items[0].json.body.stockSymbol;\n\nreturn [\n  {\n    json: {\n      stockSymbol\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        220,
        60
      ],
      "id": "d3ae1e39-823d-402e-84db-c3a7b654f26b",
      "name": "Code"
    },
    {
      "parameters": {
        "url": "=https://finnhub.io/api/v1/stock/profile2?symbol={{$json[\"stockSymbol\"]}}&token={{$vars.FINNHUB_KEY}}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        440,
        -40
      ],
      "id": "4bce7302-473b-4c1f-8f1b-fe716da4c997",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "url": "=https://finnhub.io/api/v1/quote?symbol={{$json[\"stockSymbol\"]}}&token={{$vars.FINNHUB_KEY}}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        440,
        160
      ],
      "id": "f7f09c83-1a5c-49a9-a16e-cc704bb50491",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "mode": "combine",
        "combineBy": "combineByPosition",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        660,
        60
      ],
      "id": "ea4c42f2-642c-4d9e-bd01-91c6c98e89cd",
      "name": "Merge"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a helpful, engaging financial assistant who explains stock data in plain English.\na\nBased on the following information, generate a short and friendly stock summary for a casual investor:\nCompany: {{$json[\"name\"]}} ({{$json[\"ticker\"]}})\nIndustry: {{$json[\"finnhubIndustry\"]}}\nExchange: {{$json[\"exchange\"]}}\nCurrent Price: ${{$json[\"c\"]}}\nDay Change: +${{$json[\"d\"]}} ({{$json[\"dp\"]}}%)\nDay High: ${{$json[\"h\"]}}\nDay Low: ${{$json[\"l\"]}}\nMarket Cap: ${{$json[\"marketCapitalization\"]}} billion\nIPO Date: {{$json[\"ipo\"]}}\nWebsite: {{$json[\"weburl\"]}}\n\nMake it 3–4 sentences long. Mention price, performance, industry, and anything that stands out.\nKeep the tone warm and easy to understand — like you're chatting with a curious friend.\n",
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        880,
        60
      ],
      "id": "1a2672f4-6da1-435f-8461-01244025039e",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        1400,
        100
      ],
      "id": "3385a5b7-096e-4abf-8b6a-dcf7c4097871",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "content": "Create a simple app with the following requirements. 1- Use stock analysis relevant light color background to the web app. 2- on top header Add text \"Known stock analysis\"  3- In the middle of the page add a text box and below submit button. Add this image \n\n\nwhen hit analyze stock button it should post to the webhook :https://datacloudlabs.app.n8n.cloud/webhook-test/a496a526-f12f-48a6-a6ba-163e00a0424b\n\nwhen you get the response from webhook display the response\n",
        "height": 180,
        "width": 520
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1180,
        240
      ],
      "id": "d38c0a62-d934-435a-90d2-7c97e77e6c7d",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        800,
        360
      ],
      "id": "ed477747-3b18-4cea-a33c-7d7202ae9115",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "Q9TlL3BJTUOnSXPt",
          "name": "OpenRouter account"
        }
      }
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          },
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "pinData": {},
  "triggerCount": 0,
  "meta": {
    "templateCredsSetupCompleted": true
  }
}