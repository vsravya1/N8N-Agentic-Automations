{
  "name": "Perplexity+AI Agent - Ask latest about AI and Data engineering",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "e0190f23-3d19-477f-8f7b-0eda3785095f",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -840,
        -100
      ],
      "id": "57166f96-a68a-4f0f-9091-1f98dae1d01e",
      "name": "Webhook",
      "webhookId": "e0190f23-3d19-477f-8f7b-0eda3785095f"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.4,
      "position": [
        196,
        -100
      ],
      "id": "0879bc35-7c2e-4b24-8dc9-24a56bce727d",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "jsCode": "return [\n  {\n    json: {\n      question: $input.first().json.body.question\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -620,
        -100
      ],
      "id": "a13f7f58-f9b0-470c-8a66-cb5d8853a3fe",
      "name": "Code"
    },
    {
      "parameters": {
        "model": "sonar",
        "messages": {
          "message": [
            {
              "content": "={{ $json.question }}"
            }
          ]
        },
        "options": {},
        "requestOptions": {}
      },
      "type": "n8n-nodes-base.perplexity",
      "typeVersion": 1,
      "position": [
        -400,
        -100
      ],
      "id": "757f07fd-7b9a-4252-bebd-b4a90636ed2c",
      "name": "Message a model",
      "credentials": {
        "perplexityApi": {
          "id": "RgMhz2YTDrNvOedd",
          "name": "Perplexity account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=Take the following AI-generated answer and rephrase it into a friendly, engaging summary for a non-technical audience. Use clear sentences, add light tone, and mention any exciting developments briefly.\n\nHere is the original answer:\n{{ $json.choices[0].message.content }}\n",
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        -180,
        -100
      ],
      "id": "0dde0047-059e-489a-afe0-e5db1dbb5821",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "model": "openai/gpt-4o-mini",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        -92,
        120
      ],
      "id": "bb6fcb18-49a6-44ea-a9d6-503ef37326db",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "Q9TlL3BJTUOnSXPt",
          "name": "OpenRouter account"
        }
      }
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Message a model",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message a model": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "pinData": {},
  "triggerCount": 0,
  "meta": {
    "templateCredsSetupCompleted": true
  }
}
